syntax = "proto3";
package reddit;

import "google/protobuf/timestamp.proto";

service Reddit {
    // Create a Post
    rpc CreatePost (Post) returns (Post) {}
    
    // Upvote or downvote a Post
    rpc VotePost (VoteRequest) returns (Post) {}
    
    // Retrieve Post content
    rpc GetPost (Post) returns (Post) {} 
    
    // Create a Comment
    rpc CreateComment (Comment) returns (Comment) {}

    // Upvote or downvote a Comment
    rpc VoteComment (VoteRequest) returns (Comment) {}

    // Retrieve N most upvoted Comments' content
    rpc GetTopComments (GetTopCommentsRequest) returns (GetTopCommentsResponse) {}

    // Open N most upvoted comments with their N most upvoted comments (tree of depth 2)
    rpc ExpandCommentBranch (ExpandCommentBranchRequest) returns (ExpandCommentBranchResponse) {}
    
    // The client can then add comment IDs to the stream to receive score updates for those comments.
    // rpc MonitorCommentUpdates (stream MonitorCommentUpdatesRequest) returns (stream Comment) {}
}

message GetTopCommentsRequest {
    Post post = 1;
    int32 n = 2;
}

message GetTopCommentsResponse {
    repeated Comment comments = 1;
}

message ExpandCommentBranchRequest {
    Comment comment = 1;
    int32 n = 2;
}

message ExpandCommentBranchResponse {
    repeated Comment comments = 1;
}

enum VoteType {
    UPVOTE = 0;
    DOWNVOTE = 1;
}

message VoteRequest {
    oneof target {
        Post post = 1;
        Comment comment = 2;
    }
    VoteType vote_type = 3;
}


message User {
  string id = 1;
}

enum PostState {
    POST_NORMAL = 0;
    POST_LOCKED = 1;
    POST_HIDDEN = 2;
}

message Post {
    string title = 1;
    string text = 2;
    string URL = 3;
    int32 score = 4;
    PostState post_state = 5;
    google.protobuf.Timestamp publication_date = 6;
    Subreddit subreddit = 7;
}

enum CommentState {
    COMMENT_NORMAL = 0;
    COMMENT_HIDDEN = 1;
}

message Comment {
    string text = 1;
    User author = 2;
    int32 score = 3;
    CommentState comment_state = 4;
    google.protobuf.Timestamp publication_date = 5;
    oneof parent {
        Post attached_post = 6;
        Comment attached_comment = 7;
    }
}

enum SubredditState {
    SUBREDDIT_PUBLIC = 0;
    SUBREDDIT_PRIVATE = 1;
    SUBREDDIT_HIDDEN = 2;
}

message Subreddit {
    string name = 1;
    SubredditState subreddit_state = 2;
    repeated string tags = 3;
}